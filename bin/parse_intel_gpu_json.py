#!/usr/bin/env python3

import argparse
import json
import os.path
import sys


def parse(log_file):
    """
    Parse json file generated by `intel_gpu_tool -J` to check if GPU is being
    used.
    """
    if not os.path.isfile(log_file):
        raise FileNotFoundError("{} not found.".format(log_file))

    with open(log_file) as f:
        content = f.read().strip()

    # intel_gpu_top -J does not return valid JSON. The brackets are missing.
    if content[0] != "[":
        data = json.loads("[" + content + "]")
    else:
        data = json.loads(content)

    sumdata = {}
    for d in data:
        # Looking at the `engines` section only
        for k, v in d["engines"].items():
            # Focus on GPU usage for video encoding/decoding only
            if "Video/" in k and v.get("busy"):
                if sumdata.get(k):
                    sumdata[k] += v["busy"]
                else:
                    sumdata[k] = v["busy"]

    gpu_average = 0.0
    if data and sumdata:
        gpu_average = sum(sumdata.values()) / len(data)

    return gpu_average


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description=(
            "Parse json file generated by `intel_gpu_tool -J` to"
            "check if GPU is being used"
        )
    )
    parser.add_argument("logfile", help="Path to the log file to parse.")
    args = parser.parse_args()
    gpu_average = parse(args.logfile)
    if gpu_average:
        print("GPU is used (average: {:.2f}%)".format(gpu_average))
    else:
        sys.exit("Error: GPU is not used.")
