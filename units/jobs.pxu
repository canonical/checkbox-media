id: kivu/vainfo
category_id: kivu
plugin: attachment
_summary: Attach content of vainfo
requires: executable.name == "vainfo"
command:
  vainfo

id: kivu/gstreamer_h264_encoding
category_id: kivu
plugin: shell
user: root
_summary: Generate json GPU usage file when encoding a H264 video using gstreamer
requires:
  executable.name == "gst-launch-1.0"
  executable.name == "intel_gpu_top"
command:
  timeout 10 gst-launch-1.0 videotestsrc ! video/x-raw,width=3840,height=2160 ! vaapih264enc ! fakesink &
  timeout 10 intel_gpu_top -J > "${PLAINBOX_SESSION_SHARE}"/gstreamer_h264_encoding_intel_gpu_top.json
  if [[ "$?" -eq 124 ]]
  then
      echo "Test finished"
      exit 0
  else
      echo "Error"
      exit 1
  fi

id: kivu/gstreamer_h264_decoding
category_id: kivu
plugin: shell
user: root
_summary: Generate json GPU usage file when decoding a H264 video using gstreamer
requires:
  executable.name == "gst-launch-1.0"
  executable.name == "intel_gpu_top"
command:
  gst-launch-1.0 -v playbin uri=file://"${PLAINBOX_PROVIDER_DATA}"/bbb_h264_2160p_60fps_extract.mp4 &
  timeout 10 intel_gpu_top -J > "${PLAINBOX_SESSION_SHARE}"/gstreamer_h264_decoding_intel_gpu_top.json
  if [[ "$?" -eq 124 ]]
  then
      echo "Test finished"
      exit 0
  else
      echo "Error"
      exit 1
  fi

id: kivu/check_gstreamer_h264_encoding
category_id: kivu
flags: simple
_summary: Check GPU is used when encoding a H264 video using gstreamer
requires:
  executable.name == "gst-launch-1.0"
  executable.name == "intel_gpu_top"
after:
  kivu/gstreamer_h264_encoding
command:
  parse_intel_gpu_json.py "${PLAINBOX_SESSION_SHARE}"/gstreamer_h264_encoding_intel_gpu_top.json

id: kivu/check_gstreamer_h264_decoding
category_id: kivu
flags: simple
_summary: Check GPU is used when decoding a H264 video using gstreamer
requires:
  executable.name == "gst-launch-1.0"
  executable.name == "intel_gpu_top"
after:
  kivu/gstreamer_h264_decoding
command:
  parse_intel_gpu_json.py "${PLAINBOX_SESSION_SHARE}"/gstreamer_h264_decoding_intel_gpu_top.json

id: kivu/chromium_capture_logs_h264_video
category_id: kivu
flags: simple
user: root
_summary: Play H264 video using Chromium (VAAPI enabled) and capture GPU usage
requires:
  executable.name == "intel_gpu_top"
  snap.name == "chromium"
command:
  # Play fullscreen looping video in Chromium
  exec sudo --preserve-env -u "${NORMAL_USER}" timeout 30 chromium --start-fullscreen --enable-logging=stderr 2>&1 "${PLAINBOX_PROVIDER_DATA}"/h264-video.html | tee "${PLAINBOX_SESSION_SHARE}"/chromium_h264_video_vaapi_enabled.log &
  # Gather GPU logs (JSON pseudo-format)
  timeout 30 intel_gpu_top -J > "${PLAINBOX_SESSION_SHARE}"/chromium_h264_video_vaapi_enabled_intel_gpu_top.json
  if [[ "$?" -eq 124 ]]
  then
      echo "Test finished"
      exit 0
  else
      echo "Error"
      exit 1
  fi

id: kivu/check_chromium_hw_decoder
category_id: kivu
flags: simple
_summary: Make sure video was played in Chromium using a hardware decoder
depends:
  kivu/chromium_capture_logs_h264_video
command:
  parse_chromium_logs.py "${PLAINBOX_SESSION_SHARE}"/chromium_h264_video_vaapi_enabled.log

id: kivu/chromium_capture_logs_h264_video_vaapi_disabled
category_id: kivu
flags: simple
user: root
_summary: Play H264 video using Chromium (VAAPI disabled) and capture GPU usage
requires:
  executable.name == "intel_gpu_top"
  snap.name == "chromium"
command:
  # Play fullscreen looping video in Chromium
  # (HW decoder feature disabled)
  exec sudo --preserve-env -u "${NORMAL_USER}" timeout 30 chromium --start-fullscreen --disable-features=VaapiVideoDecoder --enable-logging=stderr 2>&1 "${PLAINBOX_PROVIDER_DATA}"/h264-video.html | tee "${PLAINBOX_SESSION_SHARE}"/chromium_h264_video_vaapi_disabled.log &
  # Gather GPU logs (JSON pseudo-format)
  timeout 30 intel_gpu_top -J > "${PLAINBOX_SESSION_SHARE}"/chromium_h264_video_vaapi_disabled_intel_gpu_top.json
  if [[ "$?" -eq 124 ]]
  then
      echo "Test finished"
      exit 0
  else
      echo "Error"
      exit 1
  fi

#id: kivu/chromium_capture_logs_webrtc_broadcast
#category_id: kivu
#flags: simple
#command:
#  timeout 30 chromium --start-fullscreen --enable-logging=stderr 2>&1 http://localhost:4000/ | tee "${PLAINBOX_SESSION_SHARE}"/chromium_webrtc_broadcast_vaapi_enabled.log &
#  sleep 1 &
#  pidstat 30 1 -uhlH -G .*chrom.* > "${PLAINBOX_SESSION_SHARE}"/chromium_webrtc_broadcast_vaapi_enabled_pidstat.log
#
#id: kivu/chromium_capture_logs_webrtc_broadcast_vaapi_disabled
#category_id: kivu
#flags: simple
#command:
#  timeout 30 chromium --start-fullscreen --disable-features=VaapiVideoDecoder --enable-logging=stderr 2>&1 http://localhost:4000/ | tee "${PLAINBOX_SESSION_SHARE}"/chromium_webrtc_broadcast_vaapi_disabled.log &
#  sleep 1 &
#  pidstat 30 1 -uhlH -G .*chrom.* > "${PLAINBOX_SESSION_SHARE}"/chromium_webrtc_broadcast_vaapi_disabled_pidstat.log
#
#id: kivu/check_cpu_usage_logs_webrtc_broadcast
#category_id: kivu
#flags: simple
#_summary: Compare average CPU usage with/without hardware acceleration (WebRTC broadcast)
#depends:
#  kivu/chromium_capture_logs_webrtc_broadcast
#  kivu/chromium_capture_logs_webrtc_broadcast_vaapi_disabled
#command:
#  parse_pidstat_logs.py "${PLAINBOX_SESSION_SHARE}"/chromium_webrtc_broadcast_vaapi_disabled_pidstat.log "${PLAINBOX_SESSION_SHARE}"/chromium_webrtc_broadcast_vaapi_enabled_pidstat.log
#
#id: kivu/cpu_usage_attachment_webrtc_broadcast.json
#category_id: kivu
#plugin: attachment
#depends:
#  kivu/chromium_capture_logs_webrtc_broadcast
#  kivu/chromium_capture_logs_webrtc_broadcast_vaapi_disabled
#command:
#  parse_pidstat_logs.py --json "${PLAINBOX_SESSION_SHARE}"/chromium_webrtc_broadcast_vaapi_disabled_pidstat.log "${PLAINBOX_SESSION_SHARE}"/chromium_webrtc_broadcast_vaapi_enabled_pidstat.log

id: kivu/check_chromium_logs_h264
category_id: kivu
flags: simple
_summary: Compare average GPU usage with/without hardware acceleration (H264 video on Chromium)
depends:
  kivu/chromium_capture_logs_h264_video
  kivu/chromium_capture_logs_h264_video_vaapi_disabled
command:
  compare_intel_gpu_top_json.py "${PLAINBOX_SESSION_SHARE}"/chromium_h264_video_vaapi_enabled_intel_gpu_top.json "${PLAINBOX_SESSION_SHARE}"/chromium_h264_video_vaapi_disabled_intel_gpu_top.json

id: kivu/gpu_usage_attachment_chromium_h264_video.json
category_id: kivu
_summary: Attach GPU usage info (H264 video on Chromium)
plugin: attachment
depends:
  kivu/chromium_capture_logs_h264_video
  kivu/chromium_capture_logs_h264_video_vaapi_disabled
command:
  compare_intel_gpu_top_json.py --json "${PLAINBOX_SESSION_SHARE}"/chromium_h264_video_vaapi_enabled_intel_gpu_top.json "${PLAINBOX_SESSION_SHARE}"/chromium_h264_video_vaapi_disabled_intel_gpu_top.json

